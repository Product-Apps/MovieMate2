name: Build Android APK & AAB

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: write

env:
  NODE_VERSION: '20'
  JAVA_VERSION: '17'

jobs:
  build:
    name: Build Android Release
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: |
          npm ci
          npx expo install --check

      - name: Clear Metro Cache
        run: |
          rm -rf $TMPDIR/metro-*
          rm -rf $TMPDIR/haste-map-*
          rm -rf .expo

      - name: Configure Gradle
        run: |
          mkdir -p ~/.gradle
          cat > ~/.gradle/gradle.properties << 'EOF'
          org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError
          org.gradle.daemon=true
          org.gradle.parallel=true
          org.gradle.caching=true
          android.useAndroidX=true
          android.enableJetifier=true
          EOF

      - name: Generate Android Code
        run: npx expo prebuild --platform android --clean
        env:
          EXPO_NO_DOTENV: 1

      - name: Setup Release Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/release.keystore
          cat > android/keystore.properties << EOF
          storeFile=app/release.keystore
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
          EOF

      - name: Validate Keystore
        run: |
          keytool -list -v -keystore android/app/release.keystore -storepass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"

      - name: Configure Release Signing
        working-directory: android
        run: |
          sed -i '/signingConfigs {/a \
              release {\n\
                  keyAlias keystoreProperties["keyAlias"]\n\
                  keyPassword keystoreProperties["keyPassword"]\n\
                  storeFile file(keystoreProperties["storeFile"])\n\
                  storePassword keystoreProperties["storePassword"]\n\
              }' app/build.gradle

          sed -i '/buildTypes {/a \
              release {\n\
                  signingConfig signingConfigs.release\n\
              }' app/build.gradle

      - name: Build Release APK
        working-directory: android
        run: |
          chmod +x gradlew
          ./gradlew clean --no-daemon
          ./gradlew assembleRelease --no-daemon --stacktrace --no-build-cache

      - name: Build Release AAB
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        working-directory: android
        run: ./gradlew bundleRelease --no-daemon --no-build-cache

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ github.run_number }}.apk
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 30

      - name: Upload AAB
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ github.run_number }}.aab
          path: android/app/build/outputs/bundle/release/*.aab
          retention-days: 30

      - name: Create GitHub Release
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          body: |
            ðŸš€ Automated Release Build ${{ github.run_number }}
            
            **Changes:**
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}
            
            ðŸ“± **Downloads:**
            - APK: For direct installation
            - AAB: For Play Store upload
          files: |
            android/app/build/outputs/apk/release/*.apk
            android/app/build/outputs/bundle/release/*.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
